import unittest

from sudoku import isValidSudoku

class SudokuTest(unittest.TestCase):
    def test_good01(self):
        """
        This board doesn't have any error, it have a valid board
        """
        board = [["5","3",".",".","7",".",".",".","."]
                ,["6",".",".","1","9","5",".",".","."]
                ,[".","9","8",".",".",".",".","6","."]
                ,["8",".",".",".","6",".",".",".","3"]
                ,["4",".",".","8",".","3",".",".","1"]
                ,["7",".",".",".","2",".",".",".","6"]
                ,[".","6",".",".",".",".","2","8","."]
                ,[".",".",".","4","1","9",".",".","5"]
                ,[".",".",".",".","8",".",".","7","9"]]
        
        self.assertEqual(isValidSudoku(board), True)

    def test_same_number_col(self):
        """
        This board has the same number in the same column
        """
        board = [["8","3",".",".","7",".",".",".","."]
                ,["6",".",".","1","9","5",".",".","."]
                ,[".","9","8",".",".",".",".","6","."]
                ,["8",".",".",".","6",".",".",".","3"]
                ,["4",".",".","8",".","3",".",".","1"]
                ,["7",".",".",".","2",".",".",".","6"]
                ,[".","6",".",".",".",".","2","8","."]
                ,[".",".",".","4","1","9",".",".","5"]
                ,[".",".",".",".","8",".",".","7","9"]] 

        self.assertEqual(isValidSudoku(board), False)
    
    def test_same_num_sub_matrix(self):
        """
        Test when the board has the same number in the same 3x3 sub matrix
        """
        board = [[".",".",".",".","5",".",".","1","."],
                 [".","4",".","3",".",".",".",".","."],
                 [".",".",".",".",".","3",".",".","1"],
                 ["8",".",".",".",".",".",".","2","."],
                 [".",".","2",".","7",".",".",".","."],
                 [".","1","5",".",".",".",".",".","."],
                 [".",".",".",".",".","2",".",".","."],
                 [".","2",".","9",".",".",".",".","."],
                 [".",".","4",".",".",".",".",".","."]]
        
        self.assertEqual(isValidSudoku(board), False)

    def test_good02(self):
        """
        """
        board = [[".",".",".",".",".",".",".",".","2"],
                [".",".",".",".",".",".","6",".","."],
                [".",".","1","4",".",".","8",".","."],
                [".",".",".",".",".",".",".",".","."],
                [".",".",".",".",".",".",".",".","."],
                [".",".",".",".","3",".",".",".","."],
                ["5",".","8","6",".",".",".",".","."],
                [".","9",".",".",".",".","4",".","."],
                [".",".",".",".","5",".",".",".","."]]
                
        self.assertEqual(isValidSudoku(board), True)
    


if __name__ == '__main__':
    unittest.main()